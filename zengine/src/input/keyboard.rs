
#[derive(Copy, Clone, Eq, PartialEq, Hash, Debug)]
#[repr(i32)]
pub enum Key {
    Backspace          = sdl2::keyboard::Keycode::Backspace as i32,
    Tab                = sdl2::keyboard::Keycode::Tab as i32,
    Return             = sdl2::keyboard::Keycode::Return as i32,
    Escape             = sdl2::keyboard::Keycode::Escape as i32,
    Space              = sdl2::keyboard::Keycode::Space as i32,
    Exclaim            = sdl2::keyboard::Keycode::Exclaim as i32,
    Quotedbl           = sdl2::keyboard::Keycode::Quotedbl as i32,
    Hash               = sdl2::keyboard::Keycode::Hash as i32,
    Dollar             = sdl2::keyboard::Keycode::Dollar as i32,
    Percent            = sdl2::keyboard::Keycode::Percent as i32,
    Ampersand          = sdl2::keyboard::Keycode::Ampersand as i32,
    Quote              = sdl2::keyboard::Keycode::Quote as i32,
    LeftParen          = sdl2::keyboard::Keycode::LeftParen as i32,
    RightParen         = sdl2::keyboard::Keycode::RightParen as i32,
    Asterisk           = sdl2::keyboard::Keycode::Asterisk as i32,
    Plus               = sdl2::keyboard::Keycode::Plus as i32,
    Comma              = sdl2::keyboard::Keycode::Comma as i32,
    Minus              = sdl2::keyboard::Keycode::Minus as i32,
    Period             = sdl2::keyboard::Keycode::Period as i32,
    Slash              = sdl2::keyboard::Keycode::Slash as i32,
    Num0               = sdl2::keyboard::Keycode::Num0 as i32,
    Num1               = sdl2::keyboard::Keycode::Num1 as i32,
    Num2               = sdl2::keyboard::Keycode::Num2 as i32,
    Num3               = sdl2::keyboard::Keycode::Num3 as i32,
    Num4               = sdl2::keyboard::Keycode::Num4 as i32,
    Num5               = sdl2::keyboard::Keycode::Num5 as i32,
    Num6               = sdl2::keyboard::Keycode::Num6 as i32,
    Num7               = sdl2::keyboard::Keycode::Num7 as i32,
    Num8               = sdl2::keyboard::Keycode::Num8 as i32,
    Num9               = sdl2::keyboard::Keycode::Num9 as i32,
    Colon              = sdl2::keyboard::Keycode::Colon as i32,
    Semicolon          = sdl2::keyboard::Keycode::Semicolon as i32,
    Less               = sdl2::keyboard::Keycode::Less as i32,
    Equals             = sdl2::keyboard::Keycode::Equals as i32,
    Greater            = sdl2::keyboard::Keycode::Greater as i32,
    Question           = sdl2::keyboard::Keycode::Question as i32,
    At                 = sdl2::keyboard::Keycode::At as i32,
    LeftBracket        = sdl2::keyboard::Keycode::LeftBracket as i32,
    Backslash          = sdl2::keyboard::Keycode::Backslash as i32,
    RightBracket       = sdl2::keyboard::Keycode::RightBracket as i32,
    Caret              = sdl2::keyboard::Keycode::Caret as i32,
    Underscore         = sdl2::keyboard::Keycode::Underscore as i32,
    Backquote          = sdl2::keyboard::Keycode::Backquote as i32,
    A                  = sdl2::keyboard::Keycode::A as i32,
    B                  = sdl2::keyboard::Keycode::B as i32/*,
    C                  = sdl2::keyboard::Keycode::c as i32,
    D                  = sdl2::keyboard::Keycode::d as i32,
    E                  = sdl2::keyboard::Keycode::e as i32,
    F                  = sdl2::keyboard::Keycode::f as i32,
    G                  = sdl2::keyboard::Keycode::g as i32,
    H                  = sdl2::keyboard::Keycode::h as i32,
    I                  = sdl2::keyboard::Keycode::i as i32,
    J                  = sdl2::keyboard::Keycode::j as i32,
    K                  = sdl2::keyboard::Keycode::k as i32,
    L                  = sdl2::keyboard::Keycode::l as i32,
    M                  = sdl2::keyboard::Keycode::m as i32,
    N                  = sdl2::keyboard::Keycode::n as i32,
    O                  = sdl2::keyboard::Keycode::o as i32,
    P                  = sdl2::keyboard::Keycode::p as i32,
    Q                  = sdl2::keyboard::Keycode::q as i32,
    R                  = sdl2::keyboard::Keycode::r as i32,
    S                  = sdl2::keyboard::Keycode::s as i32,
    T                  = sdl2::keyboard::Keycode::t as i32,
    U                  = sdl2::keyboard::Keycode::u as i32,
    V                  = sdl2::keyboard::Keycode::v as i32,
    W                  = sdl2::keyboard::Keycode::w as i32,
    X                  = sdl2::keyboard::Keycode::x as i32,
    Y                  = sdl2::keyboard::Keycode::y as i32,
    Z                  = sdl2::keyboard::Keycode::z as i32,
    Delete             = sdl2::keyboard::Keycode::DELETE as i32,
    CapsLock           = sdl2::keyboard::Keycode::CAPSLOCK as i32,
    F1                 = sdl2::keyboard::Keycode::F1 as i32,
    F2                 = sdl2::keyboard::Keycode::F2 as i32,
    F3                 = sdl2::keyboard::Keycode::F3 as i32,
    F4                 = sdl2::keyboard::Keycode::F4 as i32,
    F5                 = sdl2::keyboard::Keycode::F5 as i32,
    F6                 = sdl2::keyboard::Keycode::F6 as i32,
    F7                 = sdl2::keyboard::Keycode::F7 as i32,
    F8                 = sdl2::keyboard::Keycode::F8 as i32,
    F9                 = sdl2::keyboard::Keycode::F9 as i32,
    F10                = sdl2::keyboard::Keycode::F10 as i32,
    F11                = sdl2::keyboard::Keycode::F11 as i32,
    F12                = sdl2::keyboard::Keycode::F12 as i32,
    PrintScreen        = sdl2::keyboard::Keycode::PRINTSCREEN as i32,
    ScrollLock         = sdl2::keyboard::Keycode::SCROLLLOCK as i32,
    Pause              = sdl2::keyboard::Keycode::PAUSE as i32,
    Insert             = sdl2::keyboard::Keycode::INSERT as i32,
    Home               = sdl2::keyboard::Keycode::HOME as i32,
    PageUp             = sdl2::keyboard::Keycode::PAGEUP as i32,
    End                = sdl2::keyboard::Keycode::END as i32,
    PageDown           = sdl2::keyboard::Keycode::PAGEDOWN as i32,
    Right              = sdl2::keyboard::Keycode::RIGHT as i32,
    Left               = sdl2::keyboard::Keycode::LEFT as i32,
    Down               = sdl2::keyboard::Keycode::DOWN as i32,
    Up                 = sdl2::keyboard::Keycode::UP as i32,
    NumLockClear       = sdl2::keyboard::Keycode::NUMLOCKCLEAR as i32,
    KpDivide           = sdl2::keyboard::Keycode::KP_DIVIDE as i32,
    KpMultiply         = sdl2::keyboard::Keycode::KP_MULTIPLY as i32,
    KpMinus            = sdl2::keyboard::Keycode::KP_MINUS as i32,
    KpPlus             = sdl2::keyboard::Keycode::KP_PLUS as i32,
    KpEnter            = sdl2::keyboard::Keycode::KP_ENTER as i32,
    Kp1                = sdl2::keyboard::Keycode::KP_1 as i32,
    Kp2                = sdl2::keyboard::Keycode::KP_2 as i32,
    Kp3                = sdl2::keyboard::Keycode::KP_3 as i32,
    Kp4                = sdl2::keyboard::Keycode::KP_4 as i32,
    Kp5                = sdl2::keyboard::Keycode::KP_5 as i32,
    Kp6                = sdl2::keyboard::Keycode::KP_6 as i32,
    Kp7                = sdl2::keyboard::Keycode::KP_7 as i32,
    Kp8                = sdl2::keyboard::Keycode::KP_8 as i32,
    Kp9                = sdl2::keyboard::Keycode::KP_9 as i32,
    Kp0                = sdl2::keyboard::Keycode::KP_0 as i32,
    KpPeriod           = sdl2::keyboard::Keycode::KP_PERIOD as i32,
    Application        = sdl2::keyboard::Keycode::APPLICATION as i32,
    Power              = sdl2::keyboard::Keycode::POWER as i32,
    KpEquals           = sdl2::keyboard::Keycode::KP_EQUALS as i32,
    F13                = sdl2::keyboard::Keycode::F13 as i32,
    F14                = sdl2::keyboard::Keycode::F14 as i32,
    F15                = sdl2::keyboard::Keycode::F15 as i32,
    F16                = sdl2::keyboard::Keycode::F16 as i32,
    F17                = sdl2::keyboard::Keycode::F17 as i32,
    F18                = sdl2::keyboard::Keycode::F18 as i32,
    F19                = sdl2::keyboard::Keycode::F19 as i32,
    F20                = sdl2::keyboard::Keycode::F20 as i32,
    F21                = sdl2::keyboard::Keycode::F21 as i32,
    F22                = sdl2::keyboard::Keycode::F22 as i32,
    F23                = sdl2::keyboard::Keycode::F23 as i32,
    F24                = sdl2::keyboard::Keycode::F24 as i32,
    Execute            = sdl2::keyboard::Keycode::EXECUTE as i32,
    Help               = sdl2::keyboard::Keycode::HELP as i32,
    Menu               = sdl2::keyboard::Keycode::MENU as i32,
    Select             = sdl2::keyboard::Keycode::SELECT as i32,
    Stop               = sdl2::keyboard::Keycode::STOP as i32,
    Again              = sdl2::keyboard::Keycode::AGAIN as i32,
    Undo               = sdl2::keyboard::Keycode::UNDO as i32,
    Cut                = sdl2::keyboard::Keycode::CUT as i32,
    Copy               = sdl2::keyboard::Keycode::COPY as i32,
    Paste              = sdl2::keyboard::Keycode::PASTE as i32,
    Find               = sdl2::keyboard::Keycode::FIND as i32,
    Mute               = sdl2::keyboard::Keycode::MUTE as i32,
    VolumeUp           = sdl2::keyboard::Keycode::VOLUMEUP as i32,
    VolumeDown         = sdl2::keyboard::Keycode::VOLUMEDOWN as i32,
    KpComma            = sdl2::keyboard::Keycode::KP_COMMA as i32,
    KpEqualsAS400      = sdl2::keyboard::Keycode::KP_EQUALSAS400 as i32,
    AltErase           = sdl2::keyboard::Keycode::ALTERASE as i32,
    Sysreq             = sdl2::keyboard::Keycode::SYSREQ as i32,
    Cancel             = sdl2::keyboard::Keycode::CANCEL as i32,
    Clear              = sdl2::keyboard::Keycode::CLEAR as i32,
    Prior              = sdl2::keyboard::Keycode::PRIOR as i32,
    Return2            = sdl2::keyboard::Keycode::RETURN2 as i32,
    Separator          = sdl2::keyboard::Keycode::SEPARATOR as i32,
    Out                = sdl2::keyboard::Keycode::OUT as i32,
    Oper               = sdl2::keyboard::Keycode::OPER as i32,
    ClearAgain         = sdl2::keyboard::Keycode::CLEARAGAIN as i32,
    CrSel              = sdl2::keyboard::Keycode::CRSEL as i32,
    ExSel              = sdl2::keyboard::Keycode::EXSEL as i32,
    Kp00               = sdl2::keyboard::Keycode::KP_00 as i32,
    Kp000              = sdl2::keyboard::Keycode::KP_000 as i32,
    ThousandsSeparator = sdl2::keyboard::Keycode::THOUSANDSSEPARATOR as i32,
    DecimalSeparator   = sdl2::keyboard::Keycode::DECIMALSEPARATOR as i32,
    CurrencyUnit       = sdl2::keyboard::Keycode::CURRENCYUNIT as i32,
    CurrencySubUnit    = sdl2::keyboard::Keycode::CURRENCYSUBUNIT as i32,
    KpLeftParen        = sdl2::keyboard::Keycode::KP_LEFTPAREN as i32,
    KpRightParen       = sdl2::keyboard::Keycode::KP_RIGHTPAREN as i32,
    KpLeftBrace        = sdl2::keyboard::Keycode::KP_LEFTBRACE as i32,
    KpRightBrace       = sdl2::keyboard::Keycode::KP_RIGHTBRACE as i32,
    KpTab              = sdl2::keyboard::Keycode::KP_TAB as i32,
    KpBackspace        = sdl2::keyboard::Keycode::KP_BACKSPACE as i32,
    KpA                = sdl2::keyboard::Keycode::KP_A as i32,
    KpB                = sdl2::keyboard::Keycode::KP_B as i32,
    KpC                = sdl2::keyboard::Keycode::KP_C as i32,
    KpD                = sdl2::keyboard::Keycode::KP_D as i32,
    KpE                = sdl2::keyboard::Keycode::KP_E as i32,
    KpF                = sdl2::keyboard::Keycode::KP_F as i32,
    KpXor              = sdl2::keyboard::Keycode::KP_XOR as i32,
    KpPower            = sdl2::keyboard::Keycode::KP_POWER as i32,
    KpPercent          = sdl2::keyboard::Keycode::KP_PERCENT as i32,
    KpLess             = sdl2::keyboard::Keycode::KP_LESS as i32,
    KpGreater          = sdl2::keyboard::Keycode::KP_GREATER as i32,
    KpAmpersand        = sdl2::keyboard::Keycode::KP_AMPERSAND as i32,
    KpDblAmpersand     = sdl2::keyboard::Keycode::KP_DBLAMPERSAND as i32,
    KpVerticalBar      = sdl2::keyboard::Keycode::KP_VERTICALBAR as i32,
    KpDblVerticalBar   = sdl2::keyboard::Keycode::KP_DBLVERTICALBAR as i32,
    KpColon            = sdl2::keyboard::Keycode::KP_COLON as i32,
    KpHash             = sdl2::keyboard::Keycode::KP_HASH as i32,
    KpSpace            = sdl2::keyboard::Keycode::KP_SPACE as i32,
    KpAt               = sdl2::keyboard::Keycode::KP_AT as i32,
    KpExclam           = sdl2::keyboard::Keycode::KP_EXCLAM as i32,
    KpMemStore         = sdl2::keyboard::Keycode::KP_MEMSTORE as i32,
    KpMemRecall        = sdl2::keyboard::Keycode::KP_MEMRECALL as i32,
    KpMemClear         = sdl2::keyboard::Keycode::KP_MEMCLEAR as i32,
    KpMemAdd           = sdl2::keyboard::Keycode::KP_MEMADD as i32,
    KpMemSubtract      = sdl2::keyboard::Keycode::KP_MEMSUBTRACT as i32,
    KpMemMultiply      = sdl2::keyboard::Keycode::KP_MEMMULTIPLY as i32,
    KpMemDivide        = sdl2::keyboard::Keycode::KP_MEMDIVIDE as i32,
    KpPlusMinus        = sdl2::keyboard::Keycode::KP_PLUSMINUS as i32,
    KpClear            = sdl2::keyboard::Keycode::KP_CLEAR as i32,
    KpClearEntry       = sdl2::keyboard::Keycode::KP_CLEARENTRY as i32,
    KpBinary           = sdl2::keyboard::Keycode::KP_BINARY as i32,
    KpOctal            = sdl2::keyboard::Keycode::KP_OCTAL as i32,
    KpDecimal          = sdl2::keyboard::Keycode::KP_DECIMAL as i32,
    KpHexadecimal      = sdl2::keyboard::Keycode::KP_HEXADECIMAL as i32,
    LCtrl              = sdl2::keyboard::Keycode::LCTRL as i32,
    LShift             = sdl2::keyboard::Keycode::LSHIFT as i32,
    LAlt               = sdl2::keyboard::Keycode::LALT as i32,
    LGui               = sdl2::keyboard::Keycode::LGUI as i32,
    RCtrl              = sdl2::keyboard::Keycode::RCTRL as i32,
    RShift             = sdl2::keyboard::Keycode::RSHIFT as i32,
    RAlt               = sdl2::keyboard::Keycode::RALT as i32,
    RGui               = sdl2::keyboard::Keycode::RGUI as i32,
    Mode               = sdl2::keyboard::Keycode::Mode as i32,
    AudioNext          = sdl2::keyboard::Keycode::AudioNext as i32,
    AudioPrev          = sdl2::keyboard::Keycode::AudioPrev as i32,
    AudioStop          = sdl2::keyboard::Keycode::AudioStop as i32,
    AudioPlay          = sdl2::keyboard::Keycode::AudioPlay as i32,
    AudioMute          = sdl2::keyboard::Keycode::AudioMute as i32,
    MediaSelect        = sdl2::keyboard::Keycode::MediaSelect as i32,
    Www                = sdl2::keyboard::Keycode::Www as i32,
    Mail               = sdl2::keyboard::Keycode::Mail as i32,
    Calculator         = sdl2::keyboard::Keycode::Calculator as i32,
    Computer           = sdl2::keyboard::Keycode::Computer as i32,
    AcSearch           = sdl2::keyboard::Keycode::AcSearch as i32,
    AcHome             = sdl2::keyboard::Keycode::AcHome as i32,
    AcBack             = sdl2::keyboard::Keycode::AcBack as i32,
    AcForward          = sdl2::keyboard::Keycode::AcForward as i32,
    AcStop             = sdl2::keyboard::Keycode::AcStop as i32,
    AcRefresh          = sdl2::keyboard::Keycode::AcRefresh as i32,
    AcBookmarks        = sdl2::keyboard::Keycode::AcBookmarks as i32,
    BrightnessDown     = sdl2::keyboard::Keycode::BrightnessDown as i32,
    BrightnessUp       = sdl2::keyboard::Keycode::BrightnessUp as i32,
    DisplaySwitch      = sdl2::keyboard::Keycode::DisplaySwitch as i32,
    KbdIllumToggle     = sdl2::keyboard::Keycode::KbdIllumToggle as i32,
    KbdIllumDown       = sdl2::keyboard::Keycode::KbdIllumDown as i32,
    KbdIllumUp         = sdl2::keyboard::Keycode::KbdIllumUp as i32,
    Eject              = sdl2::keyboard::Keycode::Eject as i32,
    Sleep              = sdl2::keyboard::Keycode::Sleep as i32,*/
}

impl Key {
    pub fn from_sdl2_key(key: &sdl2::keyboard::Keycode) -> Key {
        match unsafe { std::mem::transmute(*key as i32) } {
            Some(key) => key,
            None => panic!("Cannot convert number {} to `Key`", *(key) as i32)
        }
    }
}

impl std::cmp::PartialEq<sdl2::keyboard::Keycode> for Key {

    fn eq(&self, other: &sdl2::keyboard::Keycode) -> bool {
        (*self) as i32 == (*other as i32)
    }

}